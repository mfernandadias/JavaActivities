ğŸ”’ final em Java: conceito geral
A palavra-chave final serve para impedir modificaÃ§Ãµes. Ela pode ser usada com:

VariÃ¡veis â†’ impede reatribuiÃ§Ã£o.

MÃ©todos â†’ impede sobrescrita.

Classes â†’ impede heranÃ§a.

ğŸ§± CLASSE final
ğŸ“Œ O que Ã©:
Uma classe final nÃ£o pode ser estendida (herdada).

âœ… Quando usar:
Quando vocÃª quer impedir que outra classe derive da sua (por exemplo, por seguranÃ§a ou para manter comportamento fixo).

ğŸ“Œ Exemplo:
java
Copy
Edit
final class ContaBancaria {
    public void sacar(double valor) {
        System.out.println("Sacando " + valor);
    }
}

// ERRO: nÃ£o Ã© possÃ­vel estender uma classe final
class ContaPoupanca extends ContaBancaria {
    // ...
}
ğŸ”§ MÃ‰TODO final
ğŸ“Œ O que Ã©:
Um mÃ©todo final nÃ£o pode ser sobrescrito (overridden) por subclasses.

âœ… Quando usar:
Quando vocÃª quer garantir que a implementaÃ§Ã£o do mÃ©todo nÃ£o seja alterada por classes filhas.

ğŸ“Œ Exemplo:
java
Copy
Edit
class Veiculo {
    public final void ligarMotor() {
        System.out.println("Motor ligado!");
    }

    public void acelerar() {
        System.out.println("Acelerando...");
    }
}

class Carro extends Veiculo {
    // ERRO: nÃ£o pode sobrescrever mÃ©todo final
    // public void ligarMotor() {
    //     System.out.println("Motor do carro ligado!");
    // }

    @Override
    public void acelerar() {
        System.out.println("Carro acelerando...");
    }
}
ğŸ§  Dica Importante:
Uma classe final automaticamente torna todos os seus mÃ©todos nÃ£o-sobrescrevÃ­veis, mesmo que vocÃª nÃ£o use final nos mÃ©todos.

Um mÃ©todo final pode estar em uma classe normal (nÃ£o-final).

ğŸŸ¨ Comparativo RÃ¡pido:
Elemento	Com final significa...
final classe	NÃ£o pode ser herdada
final mÃ©todo	NÃ£o pode ser sobrescrito
final variÃ¡vel	NÃ£o pode ser reatribuÃ­da

Reflection API
O que pe ReflexÃ£o(Refletion API)?
-- ReflexÃ£o Ã© uma API que permite inspecionar e modificar o comportamento de classes,
mÃ©todos e atributos em tempo de exeuÃ§Ã£o
--